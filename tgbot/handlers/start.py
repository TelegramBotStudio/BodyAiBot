from asyncio import sleep

from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import CommandStart
from aiogram.utils.markdown import hlink

from tgbot.config import Config
from tgbot.models.user_tg import UserTG


async def start(message: types.Message, user: UserTG, config: Config) -> None:
    start_text = (
        "–ü—Ä–∏–≤–µ—Ç!",
        "–Ø –º–æ–≥—É <b>—É–±—Ä–∞—Ç—å –æ–¥–µ–∂–¥—É</b> —Å –ª—é–±–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–µ–≤—É—à–∫–∏ ü•∞",
        "–ù–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π, –≤—Å–µ <b>–∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ</b> –∏ <b>–∞–Ω–æ–Ω–∏–º–Ω–æ</b> üôà",
        f"–ú–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ {hlink('–ø—Ä–∏–º–µ—Ä—ã', config.misc.photo_examples_url)} üîû",
        "<b>–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é</b> –¥–µ–≤—É—à–∫–∏ –∏ —è —É–±–µ—Ä—É —Å –Ω–µ–µ –æ–¥–µ–∂–¥—É üëô"
    )

    for text in start_text:
        await user.send_chat_action(types.ChatActions.TYPING)
        await sleep(2)
        await user.send_message(text)


def register(dp: Dispatcher) -> None:
    dp.register_message_handler(start, CommandStart())
